Group by

1. Contare quanti iscritti ci sono stati ogni anno

SELECT COUNT(`id`) AS `numero_iscritti`, YEAR (`enrolment_date`) 
FROM `students` 
GROUP BY YEAR (`enrolment_date`); 

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

SELECT COUNT(`id`) AS `numero_insegnanti`, `office_address`
FROM `teachers` 
GROUP BY `office_address`;

3. Calcolare la media dei voti di ogni appello d'esame

SELECT `exam_student`.`exam_id`, AVG(`exam_student`.`vote`)
FROM `exam_student` 
GROUP BY `exam_student`.`exam_id`;

4. Contare quanti corsi di laurea ci sono per ogni dipartimento

SELECT COUNT(`courses`.`name`), `courses`.`degree_id` 
FROM `courses` 
GROUP BY `courses`.`degree_id`;


Join

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT * 
FROM `students`
INNER JOIN `degrees`
ON `degrees`.`name` = 'Corso di laurea in economia';

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze

SELECT * 
FROM `degrees`
INNER JOIN `department`
ON `degrees`.`department_id` = `department`.`id`
WHERE `department`.`name` = 'Dipartimento di Neuroscienze'
AND `degrees`.`level` = 'Magistrale';

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT * 
FROM `courses`
INNER JOIN `teachers`
WHERE `teachers`.`id` = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome

SELECT `students`.*, `degrees`.`name`, `departments`.`name`
FROM `students` 
INNER JOIN `degrees` ON `degrees`.`id` = `students`.`degree_id`
INNER JOIN `departments` ON `departments`.`id` = `degrees`.`department_id`
ORDER BY `students`.`name`, `students`.`surname`;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT `degrees`.`name`, `courses`.`name`, `teachers`.*
FROM `degrees`
INNER JOIN `courses` ON `degrees`.`id` = `courses`.`degree_id`
INNER JOIN `course_teacher` ON `course_teacher`.`course_id` = `courses`.`id`
INNER JOIN `teachers` ON `course_teacher`.`teacher_id` = `teachers`.`id`;


6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)

SELECT DISTINCT `departments`.`name`, `teachers`.* 
FROM `teachers` 
INNER JOIN `course_teacher` ON `teachers`.`id` = `course_teacher`.`teacher_id`
INNER JOIN `courses` ON `course_teacher`.`course_id` = `courses`.`id`
INNER JOIN `degrees` ON `courses`.`degree_id` = `degrees`.`id`
INNER JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
WHERE `departments`.`name` = 'Dipartimento di Matematica';

7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.

SELECT `students`.`name`, `students`.`surname`, `courses`.`id`, COUNT(`exam_student`.`vote`) AS `tentativi`, MAX(`exam_student`.`vote`) AS `miglior_voto`
FROM `students`
INNER JOIN `exam_student` ON `students`.`id` = `exam_student`.`student_id`
INNER JOIN `exams` ON `exam_student`.`exam_id` = `exams`.`id`
INNER JOIN `courses` ON `exams`.`course_id` = `courses`.`id`
GROUP BY `courses`.`id`, `students`.`id`
HAVING `miglior_voto` >= 18;